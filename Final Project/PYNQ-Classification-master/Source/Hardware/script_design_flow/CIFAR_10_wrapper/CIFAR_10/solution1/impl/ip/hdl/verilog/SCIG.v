// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module SCIG (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_state6 = 16'd32;
parameter    ap_ST_fsm_state7 = 16'd64;
parameter    ap_ST_fsm_state8 = 16'd128;
parameter    ap_ST_fsm_state9 = 16'd256;
parameter    ap_ST_fsm_state10 = 16'd512;
parameter    ap_ST_fsm_pp0_stage0 = 16'd1024;
parameter    ap_ST_fsm_state13 = 16'd2048;
parameter    ap_ST_fsm_pp1_stage0 = 16'd4096;
parameter    ap_ST_fsm_pp1_stage1 = 16'd8192;
parameter    ap_ST_fsm_pp1_stage2 = 16'd16384;
parameter    ap_ST_fsm_state23 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [31:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_V_V_read;
reg[31:0] out_V_V_din;
reg out_V_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    in_V_V_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage1;
reg   [0:0] exitcond_reg_895;
reg   [0:0] tmp_84_reg_904;
reg   [0:0] or_cond1_reg_908;
wire    ap_CS_fsm_pp1_stage2;
wire    ap_block_pp1_stage2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond2_reg_886;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp1_iter2;
reg   [0:0] tmp_93_reg_924;
reg   [0:0] tmp_93_reg_924_pp1_iter1_reg;
reg   [0:0] tmp_93_reg_924_pp1_iter2_reg;
reg   [31:0] i6_reg_235;
reg   [31:0] inp_reg_246;
reg   [31:0] i_reg_258;
reg   [31:0] inp_6_reg_280;
wire   [0:0] tmp_s_fu_335_p2;
reg   [0:0] tmp_s_reg_780;
reg    ap_block_state1;
reg  signed [31:0] tmp_V_283_reg_784;
reg    ap_block_state2;
reg  signed [31:0] tmp_V_285_reg_789;
reg    ap_block_state3;
reg  signed [31:0] tmp_V_287_reg_795;
reg    ap_block_state4;
reg  signed [31:0] tmp_V_291_reg_800;
reg    ap_block_state6;
wire  signed [31:0] KER_size_0_fu_341_p2;
reg  signed [31:0] KER_size_0_reg_805;
reg    ap_block_state8;
wire   [31:0] baseIterBound_fu_350_p2;
reg   [31:0] baseIterBound_reg_854;
wire  signed [31:0] KER_size_1_fu_370_p2;
reg  signed [31:0] KER_size_1_reg_876;
wire    ap_CS_fsm_state9;
wire   [31:0] KER_bound_fu_374_p2;
reg   [31:0] KER_bound_reg_881;
wire    ap_CS_fsm_state10;
wire   [0:0] exitcond2_fu_378_p2;
wire    ap_block_state11_pp0_stage0_iter0;
reg    ap_block_state12_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] i_7_fu_383_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_fu_389_p2;
wire    ap_block_state14_pp1_stage0_iter0;
reg    ap_predicate_op181_read_state17;
reg    ap_block_state17_pp1_stage0_iter1;
reg    ap_block_state20_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] exitcond_reg_895_pp1_iter1_reg;
wire   [31:0] i_8_fu_394_p2;
reg   [31:0] i_8_reg_899;
wire   [0:0] tmp_84_fu_407_p2;
reg   [0:0] tmp_84_reg_904_pp1_iter1_reg;
wire   [0:0] or_cond1_fu_459_p2;
wire   [31:0] inp_2_fu_465_p2;
wire   [31:0] tmp_89_fu_482_p2;
reg   [31:0] tmp_89_reg_917;
reg    ap_predicate_op114_read_state15;
reg    ap_block_state15_pp1_stage1_iter0;
wire    ap_block_state18_pp1_stage1_iter1;
reg    ap_block_state21_pp1_stage1_iter2;
reg    ap_block_pp1_stage1_11001;
wire   [0:0] tmp_93_fu_488_p2;
wire   [31:0] input_ind_fu_536_p2;
reg   [31:0] input_ind_reg_928;
reg   [31:0] input_ind_reg_928_pp1_iter1_reg;
wire   [0:0] tmp_96_fu_548_p2;
wire   [0:0] tmp_97_fu_565_p2;
wire   [0:0] tmp_98_fu_585_p2;
wire   [31:0] p_inp_1_fu_611_p3;
wire   [31:0] tmp_94_fu_729_p2;
reg   [31:0] tmp_94_reg_951;
reg    ap_predicate_op161_read_state16;
reg    ap_block_state16_pp1_stage2_iter0;
wire    ap_block_state19_pp1_stage2_iter1;
reg    ap_block_state22_pp1_stage2_iter2;
reg    ap_block_pp1_stage2_11001;
wire   [15:0] inputBuf_V_q1;
reg   [15:0] inputBuf_V_load_1_reg_966;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state11;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state14;
reg    ap_block_pp1_stage2_subdone;
reg   [13:0] inputBuf_V_address0;
reg    inputBuf_V_ce0;
reg    inputBuf_V_we0;
wire   [15:0] inputBuf_V_q0;
reg   [13:0] inputBuf_V_address1;
reg    inputBuf_V_ce1;
reg    inputBuf_V_we1;
reg   [7:0] inElem_V_address0;
reg    inElem_V_ce0;
wire   [15:0] inElem_V_q0;
reg   [7:0] inElem_V_address1;
reg    inElem_V_ce1;
reg    inElem_V_we1;
reg   [15:0] inElem_V_d1;
reg   [31:0] ap_phi_mux_inp_phi_fu_250_p4;
reg   [31:0] ap_phi_mux_i_phi_fu_262_p4;
reg   [31:0] ap_phi_reg_pp1_iter0_inp_1_reg_269;
reg   [31:0] ap_phi_reg_pp1_iter0_inp_6_reg_280;
reg   [15:0] ap_phi_mux_storemerge_phi_fu_305_p4;
wire   [15:0] tmp_241_fu_695_p1;
reg   [15:0] ap_phi_reg_pp1_iter1_storemerge_reg_301;
wire   [15:0] ap_phi_reg_pp1_iter0_storemerge_reg_301;
wire   [63:0] tmp_90_fu_700_p1;
wire   [63:0] tmp_165_2_fu_709_p1;
wire   [63:0] tmp_165_1_fu_719_p1;
wire   [63:0] tmp_95_fu_734_p1;
wire   [63:0] tmp_174_1_fu_745_p1;
wire   [63:0] tmp_174_2_fu_764_p1;
reg    ap_block_state5;
reg    ap_block_state7;
reg    ap_block_pp0_stage0_01001;
wire  signed [31:0] tmp_V_301_fu_750_p1;
reg    ap_block_pp1_stage0_01001;
wire  signed [31:0] tmp_V_302_fu_755_p1;
reg    ap_block_pp1_stage1_01001;
wire  signed [31:0] tmp_V_303_fu_769_p1;
reg    ap_block_pp1_stage2_01001;
wire   [11:0] IFMPadDimSqrt_fu_102;
reg   [31:0] oy_fu_114;
wire   [31:0] p_1_fu_619_p3;
reg   [31:0] ox_fu_118;
wire   [31:0] ox_1_fu_579_p2;
reg   [31:0] ky_fu_122;
wire   [31:0] ky_3_fu_559_p2;
reg   [31:0] inp_j_fu_126;
wire   [31:0] inp_j_1_fu_677_p3;
reg   [31:0] inp_i_fu_130;
wire   [31:0] inp_i_2_fu_669_p3;
reg   [31:0] kx_fu_134;
wire   [31:0] kx_3_fu_542_p2;
wire   [15:0] tmp_239_fu_471_p1;
wire   [15:0] tmp_240_fu_632_p1;
wire   [15:0] baseIterBound_fu_350_p1;
wire  signed [31:0] extLd_fu_403_p1;
wire   [31:0] tmp_85_fu_413_p2;
wire   [26:0] tmp_235_fu_427_p4;
wire   [26:0] tmp_236_fu_437_p4;
wire   [26:0] tmp_237_fu_447_p2;
wire   [0:0] tmp_238_fu_453_p2;
wire   [0:0] tmp_234_fu_419_p3;
wire   [31:0] tmp_242_fu_476_p2;
wire   [31:0] tmp_fu_506_p2;
wire   [31:0] tmp_243_fu_512_p2;
wire   [31:0] tmp_244_fu_518_p2;
wire   [31:0] tmp4_fu_530_p2;
wire   [31:0] tmp3_fu_524_p2;
wire   [31:0] oy_1_fu_599_p2;
wire   [0:0] tmp_99_fu_605_p2;
wire   [31:0] inp_j_3_fu_637_p2;
wire   [31:0] inp_i_1_fu_649_p2;
wire   [0:0] tmp_92_fu_655_p2;
wire   [0:0] tmp_91_fu_643_p2;
wire   [31:0] p_s_fu_661_p3;
wire   [31:0] tmp_164_2_fu_704_p2;
wire   [31:0] tmp_164_1_fu_714_p2;
wire   [31:0] tmp_245_fu_724_p2;
wire   [31:0] tmp_173_1_fu_739_p2;
wire   [31:0] tmp_173_2_fu_759_p2;
wire    ap_CS_fsm_state13;
reg   [15:0] ap_NS_fsm;
reg    ap_block_pp1_stage1_subdone;
reg    ap_block_pp0;
reg    ap_block_pp1;
reg    ap_predicate_op189_store_state17;
reg    ap_enable_operation_189;
reg    ap_enable_state17_pp1_iter1_stage0;
reg    ap_predicate_op194_store_state17;
reg    ap_enable_operation_194;
reg    ap_predicate_op199_store_state18;
reg    ap_enable_operation_199;
reg    ap_enable_state18_pp1_iter1_stage1;
reg    ap_enable_operation_205;
reg    ap_enable_state19_pp1_iter1_stage2;
reg    ap_enable_operation_210;
reg    ap_enable_state20_pp1_iter2_stage0;
reg    ap_enable_operation_209;
reg    ap_enable_operation_213;
reg    ap_enable_operation_219;
reg    ap_enable_state21_pp1_iter2_stage1;
reg    ap_enable_operation_220;
reg    ap_enable_state22_pp1_iter2_stage2;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_807;
reg    ap_condition_483;
reg    ap_condition_460;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

SCIG_inputBuf_V #(
    .DataWidth( 16 ),
    .AddressRange( 10500 ),
    .AddressWidth( 14 ))
inputBuf_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_V_address0),
    .ce0(inputBuf_V_ce0),
    .we0(inputBuf_V_we0),
    .d0(inElem_V_q0),
    .q0(inputBuf_V_q0),
    .address1(inputBuf_V_address1),
    .ce1(inputBuf_V_ce1),
    .we1(inputBuf_V_we1),
    .d1(ap_phi_mux_storemerge_phi_fu_305_p4),
    .q1(inputBuf_V_q1)
);

SCIG_inElem_V #(
    .DataWidth( 16 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
inElem_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inElem_V_address0),
    .ce0(inElem_V_ce0),
    .q0(inElem_V_q0),
    .address1(inElem_V_address1),
    .ce1(inElem_V_ce1),
    .we1(inElem_V_we1),
    .d1(inElem_V_d1)
);

cifar_10_mul_32s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_32s_bkb_U11(
    .din0(tmp_V_291_reg_800),
    .din1(tmp_V_285_reg_789),
    .dout(KER_size_0_fu_341_p2)
);

cifar_10_mul_32s_cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_32s_cud_U12(
    .din0(tmp_V_283_reg_784),
    .din1(baseIterBound_fu_350_p1),
    .dout(baseIterBound_fu_350_p2)
);

cifar_10_mul_32s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_32s_bkb_U13(
    .din0(tmp_V_285_reg_789),
    .din1(KER_size_0_reg_805),
    .dout(KER_size_1_fu_370_p2)
);

cifar_10_mul_32s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
cifar_10_mul_32s_bkb_U14(
    .din0(tmp_V_287_reg_795),
    .din1(KER_size_1_reg_876),
    .dout(KER_bound_fu_374_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state11))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state11);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8) & (tmp_s_reg_780 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage2_subdone) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage2_subdone) & (1'b1 == ap_CS_fsm_pp1_stage2))) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8) & (tmp_s_reg_780 == 1'd1))) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_807)) begin
        if ((tmp_84_fu_407_p2 == 1'd0)) begin
            ap_phi_reg_pp1_iter0_inp_1_reg_269 <= ap_phi_mux_inp_phi_fu_250_p4;
        end else if ((tmp_84_fu_407_p2 == 1'd1)) begin
            ap_phi_reg_pp1_iter0_inp_1_reg_269 <= inp_2_fu_465_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_93_fu_488_p2 == 1'd0) & (exitcond_reg_895 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_93_fu_488_p2 == 1'd1) & (tmp_96_fu_548_p2 == 1'd0) & (exitcond_reg_895 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_96_fu_548_p2 == 1'd1) & (tmp_93_fu_488_p2 == 1'd1) & (tmp_97_fu_565_p2 == 1'd0) & (exitcond_reg_895 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_97_fu_565_p2 == 1'd1) & (tmp_96_fu_548_p2 == 1'd1) & (tmp_93_fu_488_p2 == 1'd1) & (tmp_98_fu_585_p2 == 1'd0) & (exitcond_reg_895 == 1'd0)))) begin
        ap_phi_reg_pp1_iter0_inp_6_reg_280 <= ap_phi_reg_pp1_iter0_inp_1_reg_269;
    end else if (((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_98_fu_585_p2 == 1'd1) & (tmp_97_fu_565_p2 == 1'd1) & (tmp_96_fu_548_p2 == 1'd1) & (tmp_93_fu_488_p2 == 1'd1) & (exitcond_reg_895 == 1'd0))) begin
        ap_phi_reg_pp1_iter0_inp_6_reg_280 <= p_inp_1_fu_611_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_460)) begin
        if ((1'b1 == ap_condition_483)) begin
            ap_phi_reg_pp1_iter1_storemerge_reg_301 <= 16'd2;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter1_storemerge_reg_301 <= ap_phi_reg_pp1_iter0_storemerge_reg_301;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_fu_378_p2 == 1'd0))) begin
        i6_reg_235 <= i_7_fu_383_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        i6_reg_235 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_reg_895 == 1'd0))) begin
        i_reg_258 <= i_8_reg_899;
    end else if ((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8) & (tmp_s_reg_780 == 1'd1))) begin
        i_reg_258 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_84_reg_904 == 1'd1) & (exitcond_reg_895 == 1'd0))) begin
        inp_i_fu_130 <= inp_i_2_fu_669_p3;
    end else if ((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8) & (tmp_s_reg_780 == 1'd1))) begin
        inp_i_fu_130 <= 32'd4294967294;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_84_reg_904 == 1'd1) & (exitcond_reg_895 == 1'd0))) begin
        inp_j_fu_126 <= inp_j_1_fu_677_p3;
    end else if ((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8) & (tmp_s_reg_780 == 1'd1))) begin
        inp_j_fu_126 <= 32'd4294967294;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_reg_895 == 1'd0))) begin
        inp_reg_246 <= inp_6_reg_280;
    end else if ((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8) & (tmp_s_reg_780 == 1'd1))) begin
        inp_reg_246 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_93_fu_488_p2 == 1'd1) & (tmp_96_fu_548_p2 == 1'd0) & (exitcond_reg_895 == 1'd0))) begin
        kx_fu_134 <= kx_3_fu_542_p2;
    end else if ((((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_96_fu_548_p2 == 1'd1) & (tmp_93_fu_488_p2 == 1'd1) & (tmp_97_fu_565_p2 == 1'd0) & (exitcond_reg_895 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_97_fu_565_p2 == 1'd1) & (tmp_96_fu_548_p2 == 1'd1) & (tmp_93_fu_488_p2 == 1'd1) & (tmp_98_fu_585_p2 == 1'd0) & (exitcond_reg_895 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_98_fu_585_p2 == 1'd1) & (tmp_97_fu_565_p2 == 1'd1) & (tmp_96_fu_548_p2 == 1'd1) & (tmp_93_fu_488_p2 == 1'd1) & (exitcond_reg_895 == 1'd0)) | (~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8) & (tmp_s_reg_780 == 1'd1)))) begin
        kx_fu_134 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_96_fu_548_p2 == 1'd1) & (tmp_93_fu_488_p2 == 1'd1) & (tmp_97_fu_565_p2 == 1'd0) & (exitcond_reg_895 == 1'd0))) begin
        ky_fu_122 <= ky_3_fu_559_p2;
    end else if ((((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_97_fu_565_p2 == 1'd1) & (tmp_96_fu_548_p2 == 1'd1) & (tmp_93_fu_488_p2 == 1'd1) & (exitcond_reg_895 == 1'd0)) | (~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8) & (tmp_s_reg_780 == 1'd1)))) begin
        ky_fu_122 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_97_fu_565_p2 == 1'd1) & (tmp_96_fu_548_p2 == 1'd1) & (tmp_93_fu_488_p2 == 1'd1) & (tmp_98_fu_585_p2 == 1'd0) & (exitcond_reg_895 == 1'd0))) begin
        ox_fu_118 <= ox_1_fu_579_p2;
    end else if ((((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_98_fu_585_p2 == 1'd1) & (tmp_97_fu_565_p2 == 1'd1) & (tmp_96_fu_548_p2 == 1'd1) & (tmp_93_fu_488_p2 == 1'd1) & (exitcond_reg_895 == 1'd0)) | (~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8) & (tmp_s_reg_780 == 1'd1)))) begin
        ox_fu_118 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_98_fu_585_p2 == 1'd1) & (tmp_97_fu_565_p2 == 1'd1) & (tmp_96_fu_548_p2 == 1'd1) & (tmp_93_fu_488_p2 == 1'd1) & (exitcond_reg_895 == 1'd0))) begin
        oy_fu_114 <= p_1_fu_619_p3;
    end else if ((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8) & (tmp_s_reg_780 == 1'd1))) begin
        oy_fu_114 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        KER_bound_reg_881 <= KER_bound_fu_374_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8) & (tmp_s_reg_780 == 1'd0))) begin
        KER_size_0_reg_805 <= KER_size_0_fu_341_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        KER_size_1_reg_876 <= KER_size_1_fu_370_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8) & (tmp_s_reg_780 == 1'd1))) begin
        baseIterBound_reg_854 <= baseIterBound_fu_350_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond2_reg_886 <= exitcond2_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_reg_895 <= exitcond_fu_389_p2;
        exitcond_reg_895_pp1_iter1_reg <= exitcond_reg_895;
        tmp_84_reg_904_pp1_iter1_reg <= tmp_84_reg_904;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        i_8_reg_899 <= i_8_fu_394_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        inp_6_reg_280 <= ap_phi_reg_pp1_iter0_inp_6_reg_280;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_93_reg_924_pp1_iter1_reg == 1'd1))) begin
        inputBuf_V_load_1_reg_966 <= inputBuf_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_93_fu_488_p2 == 1'd1) & (exitcond_reg_895 == 1'd0))) begin
        input_ind_reg_928 <= input_ind_fu_536_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        input_ind_reg_928_pp1_iter1_reg <= input_ind_reg_928;
        tmp_93_reg_924_pp1_iter1_reg <= tmp_93_reg_924;
        tmp_93_reg_924_pp1_iter2_reg <= tmp_93_reg_924_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_84_fu_407_p2 == 1'd1) & (exitcond_fu_389_p2 == 1'd0))) begin
        or_cond1_reg_908 <= or_cond1_fu_459_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_fu_389_p2 == 1'd0))) begin
        tmp_84_reg_904 <= tmp_84_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_84_reg_904 == 1'd1) & (exitcond_reg_895 == 1'd0))) begin
        tmp_89_reg_917 <= tmp_89_fu_482_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (exitcond_reg_895 == 1'd0))) begin
        tmp_93_reg_924 <= tmp_93_fu_488_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (tmp_93_reg_924_pp1_iter1_reg == 1'd1))) begin
        tmp_94_reg_951 <= tmp_94_fu_729_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_V_283_reg_784 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        tmp_V_285_reg_789 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_V_287_reg_795 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
        tmp_V_291_reg_800 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_done_reg == 1'b1) | (out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_s_reg_780 <= tmp_s_fu_335_p2;
    end
end

always @ (*) begin
    if ((exitcond2_fu_378_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_389_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0) & (exitcond_reg_895 == 1'd0))) begin
        ap_phi_mux_i_phi_fu_262_p4 = i_8_reg_899;
    end else begin
        ap_phi_mux_i_phi_fu_262_p4 = i_reg_258;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0) & (exitcond_reg_895 == 1'd0))) begin
        ap_phi_mux_inp_phi_fu_250_p4 = inp_6_reg_280;
    end else begin
        ap_phi_mux_inp_phi_fu_250_p4 = inp_reg_246;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0) & (tmp_84_reg_904 == 1'd1) & (or_cond1_reg_908 == 1'd0) & (exitcond_reg_895 == 1'd0))) begin
        ap_phi_mux_storemerge_phi_fu_305_p4 = tmp_241_fu_695_p1;
    end else begin
        ap_phi_mux_storemerge_phi_fu_305_p4 = ap_phi_reg_pp1_iter1_storemerge_reg_301;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        inElem_V_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2))) begin
        inElem_V_address0 = 64'd0;
    end else begin
        inElem_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        inElem_V_address1 = 64'd2;
    end else if ((((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2) & (or_cond1_reg_908 == 1'd1) & (tmp_84_reg_904 == 1'd1) & (exitcond_reg_895 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2) & (tmp_84_reg_904 == 1'd1) & (or_cond1_reg_908 == 1'd0) & (exitcond_reg_895 == 1'd0)))) begin
        inElem_V_address1 = 64'd1;
    end else if ((((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (or_cond1_reg_908 == 1'd1) & (tmp_84_reg_904 == 1'd1) & (exitcond_reg_895 == 1'd0) & (1'b0 == ap_block_pp1_stage1)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_84_reg_904 == 1'd1) & (or_cond1_reg_908 == 1'd0) & (exitcond_reg_895 == 1'd0) & (1'b0 == ap_block_pp1_stage1)))) begin
        inElem_V_address1 = 64'd0;
    end else begin
        inElem_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        inElem_V_ce0 = 1'b1;
    end else begin
        inElem_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (or_cond1_reg_908 == 1'd1) & (tmp_84_reg_904 == 1'd1) & (exitcond_reg_895 == 1'd0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_84_reg_904 == 1'd1) & (or_cond1_reg_908 == 1'd0) & (exitcond_reg_895 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (or_cond1_reg_908 == 1'd1) & (tmp_84_reg_904 == 1'd1) & (exitcond_reg_895 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_84_reg_904 == 1'd1) & (or_cond1_reg_908 == 1'd0) & (exitcond_reg_895 == 1'd0)))) begin
        inElem_V_ce1 = 1'b1;
    end else begin
        inElem_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        inElem_V_d1 = ap_phi_mux_storemerge_phi_fu_305_p4;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2) & (tmp_84_reg_904 == 1'd1) & (or_cond1_reg_908 == 1'd0) & (exitcond_reg_895 == 1'd0))) begin
        inElem_V_d1 = tmp_240_fu_632_p1;
    end else if ((((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2) & (or_cond1_reg_908 == 1'd1) & (tmp_84_reg_904 == 1'd1) & (exitcond_reg_895 == 1'd0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (or_cond1_reg_908 == 1'd1) & (tmp_84_reg_904 == 1'd1) & (exitcond_reg_895 == 1'd0) & (1'b0 == ap_block_pp1_stage1)))) begin
        inElem_V_d1 = 16'd2;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_84_reg_904 == 1'd1) & (or_cond1_reg_908 == 1'd0) & (exitcond_reg_895 == 1'd0) & (1'b0 == ap_block_pp1_stage1))) begin
        inElem_V_d1 = tmp_239_fu_471_p1;
    end else begin
        inElem_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_84_reg_904 == 1'd1) & (exitcond_reg_895 == 1'd0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (or_cond1_reg_908 == 1'd1) & (tmp_84_reg_904 == 1'd1) & (exitcond_reg_895 == 1'd0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (tmp_84_reg_904 == 1'd1) & (or_cond1_reg_908 == 1'd0) & (exitcond_reg_895 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (or_cond1_reg_908 == 1'd1) & (tmp_84_reg_904 == 1'd1) & (exitcond_reg_895 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_84_reg_904 == 1'd1) & (or_cond1_reg_908 == 1'd0) & (exitcond_reg_895 == 1'd0)))) begin
        inElem_V_we1 = 1'b1;
    end else begin
        inElem_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond2_reg_886 == 1'd0)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0) & (tmp_84_reg_904 == 1'd1) & (or_cond1_reg_908 == 1'd0) & (exitcond_reg_895 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage2) & (tmp_84_reg_904 == 1'd1) & (or_cond1_reg_908 == 1'd0) & (exitcond_reg_895 == 1'd0)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_84_reg_904 == 1'd1) & (or_cond1_reg_908 == 1'd0) & (exitcond_reg_895 == 1'd0) & (1'b0 == ap_block_pp1_stage1)))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((ap_done_reg == 1'b1) | (out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_reg_886 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_predicate_op181_read_state17 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (ap_predicate_op161_read_state16 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_predicate_op114_read_state15 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)) | (~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp1_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2))) begin
            inputBuf_V_address0 = tmp_95_fu_734_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
            inputBuf_V_address0 = tmp_165_1_fu_719_p1;
        end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
            inputBuf_V_address0 = tmp_90_fu_700_p1;
        end else begin
            inputBuf_V_address0 = 'bx;
        end
    end else begin
        inputBuf_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1))) begin
        inputBuf_V_address1 = tmp_174_2_fu_764_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2))) begin
        inputBuf_V_address1 = tmp_174_1_fu_745_p1;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        inputBuf_V_address1 = tmp_165_2_fu_709_p1;
    end else begin
        inputBuf_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        inputBuf_V_ce0 = 1'b1;
    end else begin
        inputBuf_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        inputBuf_V_ce1 = 1'b1;
    end else begin
        inputBuf_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_84_reg_904 == 1'd1) & (exitcond_reg_895 == 1'd0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_84_reg_904_pp1_iter1_reg == 1'd1) & (exitcond_reg_895_pp1_iter1_reg == 1'd0)))) begin
        inputBuf_V_we0 = 1'b1;
    end else begin
        inputBuf_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_84_reg_904 == 1'd1) & (exitcond_reg_895 == 1'd0))) begin
        inputBuf_V_we1 = 1'b1;
    end else begin
        inputBuf_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond2_reg_886 == 1'd0)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0) & (tmp_93_reg_924_pp1_iter1_reg == 1'd1)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (1'b0 == ap_block_pp1_stage2) & (tmp_93_reg_924_pp1_iter2_reg == 1'd1)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_93_reg_924_pp1_iter1_reg == 1'd1) & (1'b0 == ap_block_pp1_stage1)))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage2_01001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (tmp_93_reg_924_pp1_iter2_reg == 1'd1))) begin
        out_V_V_din = tmp_V_303_fu_769_p1;
    end else if (((1'b0 == ap_block_pp1_stage1_01001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_93_reg_924_pp1_iter1_reg == 1'd1))) begin
        out_V_V_din = tmp_V_302_fu_755_p1;
    end else if (((1'b0 == ap_block_pp1_stage0_01001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_93_reg_924_pp1_iter1_reg == 1'd1))) begin
        out_V_V_din = tmp_V_301_fu_750_p1;
    end else if (((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((ap_done_reg == 1'b1) | (out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_reg_886 == 1'd0)) | (~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)))) begin
        out_V_V_din = in_V_V_dout;
    end else begin
        out_V_V_din = 'bx;
    end
end

always @ (*) begin
    if (((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7)) | (~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6)) | (~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5)) | (~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4)) | (~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | (~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | (~((ap_done_reg == 1'b1) | (out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_reg_886 == 1'd0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_93_reg_924_pp1_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp1_stage2_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (tmp_93_reg_924_pp1_iter2_reg == 1'd1)) | ((1'b0 == ap_block_pp1_stage1_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (tmp_93_reg_924_pp1_iter1_reg == 1'd1)) | (~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if ((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if ((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if ((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if ((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8) & (tmp_s_reg_780 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((~((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8) & (tmp_s_reg_780 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond2_fu_378_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond2_fu_378_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_fu_389_p2 == 1'd1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_fu_389_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_pp1_stage2 : begin
            if ((~((1'b0 == ap_block_pp1_stage2_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter1 == 1'b0)) & (1'b0 == ap_block_pp1_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage2_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage2;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign IFMPadDimSqrt_fu_102 = 12'd1296;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_pp0 = ((1'b1 == ap_block_pp0_stage0_subdone) & (ap_ST_fsm_pp0_stage0 == ap_CS_fsm));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((out_V_V_full_n == 1'b0) & (exitcond2_reg_886 == 1'd0)) | ((in_V_V_empty_n == 1'b0) & (exitcond2_reg_886 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((out_V_V_full_n == 1'b0) & (exitcond2_reg_886 == 1'd0)) | ((in_V_V_empty_n == 1'b0) & (exitcond2_reg_886 == 1'd0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((out_V_V_full_n == 1'b0) & (exitcond2_reg_886 == 1'd0)) | ((in_V_V_empty_n == 1'b0) & (exitcond2_reg_886 == 1'd0))));
end

always @ (*) begin
    ap_block_pp1 = (((1'b1 == ap_block_pp1_stage0_subdone) & (ap_ST_fsm_pp1_stage0 == ap_CS_fsm)) | ((1'b1 == ap_block_pp1_stage2_subdone) & (ap_ST_fsm_pp1_stage2 == ap_CS_fsm)) | ((1'b1 == ap_block_pp1_stage1_subdone) & (ap_ST_fsm_pp1_stage1 == ap_CS_fsm)));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_93_reg_924_pp1_iter1_reg == 1'd1)) | ((in_V_V_empty_n == 1'b0) & (ap_predicate_op181_read_state17 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_93_reg_924_pp1_iter1_reg == 1'd1)) | ((in_V_V_empty_n == 1'b0) & (ap_predicate_op181_read_state17 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_93_reg_924_pp1_iter1_reg == 1'd1)) | ((in_V_V_empty_n == 1'b0) & (ap_predicate_op181_read_state17 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b1)));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_01001 = (((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_93_reg_924_pp1_iter1_reg == 1'd1)) | ((in_V_V_empty_n == 1'b0) & (ap_predicate_op114_read_state15 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_11001 = (((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_93_reg_924_pp1_iter1_reg == 1'd1)) | ((in_V_V_empty_n == 1'b0) & (ap_predicate_op114_read_state15 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = (((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_93_reg_924_pp1_iter1_reg == 1'd1)) | ((in_V_V_empty_n == 1'b0) & (ap_predicate_op114_read_state15 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

assign ap_block_pp1_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage2_01001 = (((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_93_reg_924_pp1_iter2_reg == 1'd1)) | ((in_V_V_empty_n == 1'b0) & (ap_predicate_op161_read_state16 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage2_11001 = (((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_93_reg_924_pp1_iter2_reg == 1'd1)) | ((in_V_V_empty_n == 1'b0) & (ap_predicate_op161_read_state16 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage2_subdone = (((out_V_V_full_n == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (tmp_93_reg_924_pp1_iter2_reg == 1'd1)) | ((in_V_V_empty_n == 1'b0) & (ap_predicate_op161_read_state16 == 1'b1) & (ap_enable_reg_pp1_iter0 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0) | (real_start == 1'b0));
end

assign ap_block_state11_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp0_stage0_iter1 = (((out_V_V_full_n == 1'b0) & (exitcond2_reg_886 == 1'd0)) | ((in_V_V_empty_n == 1'b0) & (exitcond2_reg_886 == 1'd0)));
end

assign ap_block_state14_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state15_pp1_stage1_iter0 = ((in_V_V_empty_n == 1'b0) & (ap_predicate_op114_read_state15 == 1'b1));
end

always @ (*) begin
    ap_block_state16_pp1_stage2_iter0 = ((in_V_V_empty_n == 1'b0) & (ap_predicate_op161_read_state16 == 1'b1));
end

always @ (*) begin
    ap_block_state17_pp1_stage0_iter1 = ((in_V_V_empty_n == 1'b0) & (ap_predicate_op181_read_state17 == 1'b1));
end

assign ap_block_state18_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage2_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2 = ((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state20_pp1_stage0_iter2 = ((out_V_V_full_n == 1'b0) & (tmp_93_reg_924_pp1_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_block_state21_pp1_stage1_iter2 = ((out_V_V_full_n == 1'b0) & (tmp_93_reg_924_pp1_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_block_state22_pp1_stage2_iter2 = ((out_V_V_full_n == 1'b0) & (tmp_93_reg_924_pp1_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_block_state3 = ((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state4 = ((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state5 = ((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state6 = ((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state7 = ((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state8 = ((out_V_V_full_n == 1'b0) | (in_V_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_condition_460 = ((1'b0 == ap_block_pp1_stage2_11001) & (1'b1 == ap_CS_fsm_pp1_stage2) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_483 = ((or_cond1_reg_908 == 1'd1) & (tmp_84_reg_904 == 1'd1) & (exitcond_reg_895 == 1'd0));
end

always @ (*) begin
    ap_condition_807 = ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (exitcond_fu_389_p2 == 1'd0));
end

always @ (*) begin
    ap_enable_operation_189 = (ap_predicate_op189_store_state17 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_194 = (ap_predicate_op194_store_state17 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_199 = (ap_predicate_op199_store_state18 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_205 = (tmp_93_reg_924_pp1_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_209 = (tmp_93_reg_924_pp1_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_210 = (tmp_93_reg_924_pp1_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_213 = (tmp_93_reg_924_pp1_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_219 = (tmp_93_reg_924_pp1_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_220 = (tmp_93_reg_924_pp1_iter2_reg == 1'd1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_enable_state17_pp1_iter1_stage0 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_enable_state18_pp1_iter1_stage1 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1));
end

always @ (*) begin
    ap_enable_state19_pp1_iter1_stage2 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2));
end

always @ (*) begin
    ap_enable_state20_pp1_iter2_stage0 = ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_enable_state21_pp1_iter2_stage1 = ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1));
end

always @ (*) begin
    ap_enable_state22_pp1_iter2_stage2 = ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage2));
end

assign ap_phi_reg_pp1_iter0_storemerge_reg_301 = 'bx;

always @ (*) begin
    ap_predicate_op114_read_state15 = ((tmp_84_reg_904 == 1'd1) & (or_cond1_reg_908 == 1'd0) & (exitcond_reg_895 == 1'd0));
end

always @ (*) begin
    ap_predicate_op161_read_state16 = ((tmp_84_reg_904 == 1'd1) & (or_cond1_reg_908 == 1'd0) & (exitcond_reg_895 == 1'd0));
end

always @ (*) begin
    ap_predicate_op181_read_state17 = ((tmp_84_reg_904 == 1'd1) & (or_cond1_reg_908 == 1'd0) & (exitcond_reg_895 == 1'd0));
end

always @ (*) begin
    ap_predicate_op189_store_state17 = ((tmp_84_reg_904 == 1'd1) & (exitcond_reg_895 == 1'd0));
end

always @ (*) begin
    ap_predicate_op194_store_state17 = ((tmp_84_reg_904 == 1'd1) & (exitcond_reg_895 == 1'd0));
end

always @ (*) begin
    ap_predicate_op199_store_state18 = ((tmp_84_reg_904_pp1_iter1_reg == 1'd1) & (exitcond_reg_895_pp1_iter1_reg == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign baseIterBound_fu_350_p1 = 32'd25816;

assign exitcond2_fu_378_p2 = ((i6_reg_235 == KER_bound_reg_881) ? 1'b1 : 1'b0);

assign exitcond_fu_389_p2 = ((ap_phi_mux_i_phi_fu_262_p4 == baseIterBound_reg_854) ? 1'b1 : 1'b0);

assign extLd_fu_403_p1 = $signed(IFMPadDimSqrt_fu_102);

assign i_7_fu_383_p2 = (i6_reg_235 + 32'd1);

assign i_8_fu_394_p2 = (ap_phi_mux_i_phi_fu_262_p4 + 32'd1);

assign inp_2_fu_465_p2 = (32'd1 + ap_phi_mux_inp_phi_fu_250_p4);

assign inp_i_1_fu_649_p2 = (32'd1 + inp_i_fu_130);

assign inp_i_2_fu_669_p3 = ((tmp_91_fu_643_p2[0:0] === 1'b1) ? p_s_fu_661_p3 : inp_i_fu_130);

assign inp_j_1_fu_677_p3 = ((tmp_91_fu_643_p2[0:0] === 1'b1) ? 32'd4294967294 : inp_j_3_fu_637_p2);

assign inp_j_3_fu_637_p2 = (32'd1 + inp_j_fu_126);

assign input_ind_fu_536_p2 = (tmp4_fu_530_p2 + tmp3_fu_524_p2);

assign kx_3_fu_542_p2 = (32'd1 + kx_fu_134);

assign ky_3_fu_559_p2 = (ky_fu_122 + 32'd1);

assign or_cond1_fu_459_p2 = (tmp_238_fu_453_p2 | tmp_234_fu_419_p3);

assign ox_1_fu_579_p2 = (ox_fu_118 + 32'd1);

assign oy_1_fu_599_p2 = (oy_fu_114 + 32'd1);

assign p_1_fu_619_p3 = ((tmp_99_fu_605_p2[0:0] === 1'b1) ? 32'd0 : oy_1_fu_599_p2);

assign p_inp_1_fu_611_p3 = ((tmp_99_fu_605_p2[0:0] === 1'b1) ? 32'd0 : ap_phi_reg_pp1_iter0_inp_1_reg_269);

assign p_s_fu_661_p3 = ((tmp_92_fu_655_p2[0:0] === 1'b1) ? 32'd4294967294 : inp_i_1_fu_649_p2);

assign start_out = real_start;

assign tmp3_fu_524_p2 = (tmp_243_fu_512_p2 + tmp_244_fu_518_p2);

assign tmp4_fu_530_p2 = (kx_fu_134 + ox_fu_118);

assign tmp_164_1_fu_714_p2 = (32'd1 + tmp_89_reg_917);

assign tmp_164_2_fu_704_p2 = (32'd2 + tmp_89_reg_917);

assign tmp_165_1_fu_719_p1 = tmp_164_1_fu_714_p2;

assign tmp_165_2_fu_709_p1 = tmp_164_2_fu_704_p2;

assign tmp_173_1_fu_739_p2 = (32'd1 + tmp_94_fu_729_p2);

assign tmp_173_2_fu_759_p2 = (32'd2 + tmp_94_reg_951);

assign tmp_174_1_fu_745_p1 = tmp_173_1_fu_739_p2;

assign tmp_174_2_fu_764_p1 = tmp_173_2_fu_759_p2;

assign tmp_234_fu_419_p3 = tmp_85_fu_413_p2[32'd31];

assign tmp_235_fu_427_p4 = {{inp_i_fu_130[31:5]}};

assign tmp_236_fu_437_p4 = {{inp_j_fu_126[31:5]}};

assign tmp_237_fu_447_p2 = (tmp_236_fu_437_p4 | tmp_235_fu_427_p4);

assign tmp_238_fu_453_p2 = ((tmp_237_fu_447_p2 != 27'd0) ? 1'b1 : 1'b0);

assign tmp_239_fu_471_p1 = in_V_V_dout[15:0];

assign tmp_240_fu_632_p1 = in_V_V_dout[15:0];

assign tmp_241_fu_695_p1 = in_V_V_dout[15:0];

assign tmp_242_fu_476_p2 = inp_reg_246 << 32'd2;

assign tmp_243_fu_512_p2 = tmp_fu_506_p2 << 32'd5;

assign tmp_244_fu_518_p2 = tmp_fu_506_p2 << 32'd2;

assign tmp_245_fu_724_p2 = input_ind_reg_928_pp1_iter1_reg << 32'd2;

assign tmp_84_fu_407_p2 = ((ap_phi_mux_inp_phi_fu_250_p4 < extLd_fu_403_p1) ? 1'b1 : 1'b0);

assign tmp_85_fu_413_p2 = (inp_j_fu_126 | inp_i_fu_130);

assign tmp_89_fu_482_p2 = (tmp_242_fu_476_p2 - inp_reg_246);

assign tmp_90_fu_700_p1 = tmp_89_reg_917;

assign tmp_91_fu_643_p2 = ((inp_j_3_fu_637_p2 == 32'd34) ? 1'b1 : 1'b0);

assign tmp_92_fu_655_p2 = ((inp_i_1_fu_649_p2 == 32'd34) ? 1'b1 : 1'b0);

assign tmp_93_fu_488_p2 = ((ap_phi_reg_pp1_iter0_inp_1_reg_269 > 32'd216) ? 1'b1 : 1'b0);

assign tmp_94_fu_729_p2 = (tmp_245_fu_724_p2 - input_ind_reg_928_pp1_iter1_reg);

assign tmp_95_fu_734_p1 = tmp_94_fu_729_p2;

assign tmp_96_fu_548_p2 = ((kx_3_fu_542_p2 == 32'd5) ? 1'b1 : 1'b0);

assign tmp_97_fu_565_p2 = ((ky_3_fu_559_p2 == 32'd5) ? 1'b1 : 1'b0);

assign tmp_98_fu_585_p2 = ((ox_1_fu_579_p2 == 32'd32) ? 1'b1 : 1'b0);

assign tmp_99_fu_605_p2 = ((oy_1_fu_599_p2 == 32'd32) ? 1'b1 : 1'b0);

assign tmp_V_301_fu_750_p1 = $signed(inputBuf_V_q0);

assign tmp_V_302_fu_755_p1 = $signed(inputBuf_V_load_1_reg_966);

assign tmp_V_303_fu_769_p1 = $signed(inputBuf_V_q1);

assign tmp_fu_506_p2 = (oy_fu_114 + ky_fu_122);

assign tmp_s_fu_335_p2 = ((in_V_V_dout == 32'd0) ? 1'b1 : 1'b0);

endmodule //SCIG
